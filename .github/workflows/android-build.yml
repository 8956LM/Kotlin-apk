name: Build Android App and Upload to Baidu Cloud

on:
  push:
    branches: [ main ]  # 当代码推送到 main 分支时触发构建
  pull_request:
    branches: [ main ]  # 当向 main 分支提交 PR 时触发构建

jobs:
  build:
    runs-on: ubuntu-latest  # 使用 Ubuntu 作为构建环境

    steps:
      - uses: actions/checkout@v3  # 检出代码仓库
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3  # 设置 Java 环境
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew  # 赋予 gradlew 执行权限

      - name: Build with Gradle
        run: ./gradlew assembleDebug  # 构建 Debug APK
        
      - name: Setup BaiduPCS-Go
        run: |
          # 下载并安装 BaiduPCS-Go
          wget -q https://github.com/iikira/BaiduPCS-Go/releases/download/3.8.3/BaiduPCS-Go-3.8.3-linux-amd64.zip
          unzip -q BaiduPCS-Go-3.8.3-linux-amd64.zip
          chmod +x BaiduPCS-Go
          sudo mv BaiduPCS-Go /usr/local/bin/
          
      - name: Authenticate with Baidu Cloud
        env:
          BAIDU_COOKIE: ${{ secrets.BAIDU_COOKIE }}
        run: |
          # 使用 Cookie 进行认证
          echo "$BAIDU_COOKIE" > cookies.txt
          BaiduPCS-Go cookie -set < cookies.txt
          
      - name: Create timestamped folder
        run: |
          # 创建带时间戳的文件夹
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          FOLDER="/GitHub_Actions_Builds/$TIMESTAMP"
          BaiduPCS-Go mkdir "$FOLDER"
          echo "UPLOAD_FOLDER=$FOLDER" >> $GITHUB_ENV
          
      - name: Upload APK to Baidu Cloud
        run: |
          # 上传 APK 文件
          BaiduPCS-Go upload app/build/outputs/apk/debug/app-debug.apk "$UPLOAD_FOLDER/"
          
      - name: Share APK and get download link
        id: share
        run: |
          # 分享文件并获取下载链接
          SHARE_RESULT=$(BaiduPCS-Go share -v -p "$UPLOAD_FOLDER/app-debug.apk")
          SHARE_LINK=$(echo "$SHARE_RESULT" | grep "链接" | awk '{print $2}')
          PASSWORD=$(echo "$SHARE_RESULT" | grep "提取码" | awk '{print $2}')
          
          echo "SHARE_LINK=$SHARE_LINK" >> $GITHUB_ENV
          echo "PASSWORD=$PASSWORD" >> $GITHUB_ENV
          
          echo "APK已上传到百度网盘"
          echo "分享链接: $SHARE_LINK"
          echo "提取码: $PASSWORD"
          
      - name: Notify via GitHub comment
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { SHARE_LINK, PASSWORD } = process.env;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `APK构建成功并已上传到百度网盘！\n\n分享链接: ${SHARE_LINK}\n提取码: ${PASSWORD}`
            });
