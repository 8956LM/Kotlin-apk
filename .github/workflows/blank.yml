name: Build Android APK with Kivy (Python 3.10)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean disk space
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          df -h

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            git \
            dpkg \
            build-essential \
            python3-dev \
            libffi-dev \
            libssl-dev \
            libltdl-dev \
            autoconf \
            automake \
            libtool \
            unzip \
            openjdk-11-jdk

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer==1.2.0 kivy==2.2.1 pillow==10.0.1 Cython==0.29.32
          pip --version
          cython --version

      - name: Initialize Buildozer
        run: buildozer init

      - name: Configure buildozer.spec
        run: |
          sed -i 's/# android.ndk = .*/android.ndk = 25c/' buildozer.spec  # 更改为 25c
          sed -i 's/# android.api = .*/android.api = 30/' buildozer.spec
          sed -i 's/# android.sdk = .*/android.sdk = 33/' buildozer.spec
          sed -i 's/# requirements = .*/requirements = python3,kivy,pillow,cython/' buildozer.spec
          cat buildozer.spec

      - name: Download Android SDK and NDK
        run: |
          mkdir -p ~/.buildozer/android/platform
          cd ~/.buildozer/android/platform
          
          # 下载 SDK 命令行工具
          wget -nc https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip -d android-sdk
          
          # 下载可用的 NDK 版本 (r25c)
          wget -nc https://dl.google.com/android/repository/android-ndk-r25c-linux-x86_64.zip
          unzip -q android-ndk-r25c-linux-x86_64.zip
          
          # 设置环境变量
          echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/.buildozer/android/platform/android-ndk-r25c" >> $GITHUB_ENV  # 更新为 r25c
          echo "PATH=$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      - name: Install SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-30" "build-tools;30.0.3" "platform-tools"

      - name: Build APK with retry
        run: |
          buildozer -v android debug || true
          buildozer -v android debug
        env:
          ANDROID_API: 30
          ANDROID_NDK: 25c  # 更新为 25c
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}

      - name: Verify APK exists
        run: |
          if [ -f "bin/*.apk" ]; then
            echo "✅ APK found!"
            ls -la bin/
          else
            echo "❌ ERROR: No APK found!"
            exit 1
          fi

      - name: Archive APK
        run: |
          mkdir -p artifacts
          cp bin/*.apk artifacts/ || echo "No APK found"
          echo "ARTIFACT_PATH=$(pwd)/artifacts" >> $GITHUB_ENV

      - name: Upload via GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v$(date +%Y%m%d)" --title "Build $(date +%Y%m%d)" --notes "Automated build"
          gh release upload "v$(date +%Y%m%d)" artifacts/*.apk --clobber
