name: Build Kivy APK with AIDL Debugging

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      java_version:
        description: 'Java version to use (8 or 11)'
        required: true
        default: '11'
        type: choice
        options:
          - '8'
          - '11'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          path: ./repo

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          # 确保正确引用工作流输入参数
          java-version: ${{ github.event.inputs.java_version }}
          distribution: 'temurin'
          java-package: jdk
          cache: 'maven'  # 添加缓存以加快构建速度

      - name: Validate project files
        run: |
          cd ./repo
          ls -la
          if [ ! -f "buildozer.spec" ]; then
            echo "buildozer.spec not found, creating default..."
            buildozer init
          fi
          cat buildozer.spec

      - name: Install dependencies
        run: |
          cd ./repo
          python -m pip install --upgrade pip
          python -m pip install buildozer cython

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          components: |
            platforms;android-30
            platform-tools
            cmdline-tools;latest
            tools
            ndk;25.2.9519653
          accept-licenses: true

      - name: Force accept all Android SDK licenses
        run: |
          mkdir -p $ANDROID_HOME/licenses
          echo "24333f8a63b6825ea9c5514f83c2829b004d1e9" > $ANDROID_HOME/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > $ANDROID_HOME/licenses/intel-android-extra-license
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Install JAXB dependencies (only for Java 11+)
        if: github.event.inputs.java_version == '11'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libxml2-dev libxslt1-dev
          JAXB_VERSION="2.3.8"
          mkdir -p ~/jaxb
          cd ~/jaxb
          
          # 下载JAXB核心依赖
          wget -q "https://repo1.maven.org/maven2/javax/xml/bind/jaxb-api/${JAXB_VERSION}/jaxb-api-${JAXB_VERSION}.jar"
          wget -q "https://repo1.maven.org/maven2/com/sun/xml/bind/jaxb-core/${JAXB_VERSION}/jaxb-core-${JAXB_VERSION}.jar"
          wget -q "https://repo1.maven.org/maven2/com/sun/xml/bind/jaxb-impl/${JAXB_VERSION}/jaxb-impl-${JAXB_VERSION}.jar"
          wget -q "https://repo1.maven.org/maven2/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar"
          
          # 创建JAXB类路径
          export JAXB_CLASSPATH=$(find ~/jaxb -name "*.jar" -print0 | tr '\0' ':')
          echo "JAXB_CLASSPATH=$JAXB_CLASSPATH" >> $GITHUB_ENV
          
          # 保存JAXB依赖到缓存目录
          mkdir -p ~/.cache/jaxb
          cp ~/jaxb/*.jar ~/.cache/jaxb/

      - name: Build APK with Buildozer
        run: |
          cd ./repo
          # 配置Buildozer使用正确的Java
          echo "export JAVA_HOME=$JAVA_HOME" >> ~/.bashrc
          source ~/.bashrc
          
          # 如果是Java 11+，设置JAXB类路径
          if [ "${{ github.event.inputs.java_version }}" == "11" ]; then
            echo "export JAXB_CLASSPATH=$JAXB_CLASSPATH" >> ~/.bashrc
            source ~/.bashrc
          fi
          
          # 显示Java版本信息
          java -version
          javac -version
          
          # 构建APK
          buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: ./repo/bin/*.apk
