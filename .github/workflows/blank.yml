- name: Patch Python for Android
        run: |
          set -e  # 确保任何命令失败都会导致脚本退出
          
          # 克隆 Python for Android 仓库
          echo "Cloning Python for Android repository..."
          git clone https://github.com/kivy/python-for-android.git ~/.buildozer/android/platform/python-for-android
          
          # 可选：切换到特定版本以确保兼容性
          cd ~/.buildozer/android/platform/python-for-android
          git checkout master  # 或指定特定版本的标签
          
          # 查找 NDK 版本定义文件
          echo "Searching for NDK version definition..."
          find_result=$(find ~/.buildozer/android/platform/python-for-android -name "download.py" -o -name "ndk.py" -o -name "versions.py" -o -name "toolchain.py")
          
          if [ -z "$find_result" ]; then
            echo "❌ ERROR: Could not find NDK version definition files"
            exit 1
          else
            echo "✅ Found files:"
            echo "$find_result"
          fi
          
          # 查找实际包含 NDK 版本定义的文件
          echo "Searching for NDK version definition in files..."
          ndk_files=$(grep -rl "DEFAULT_NDK_VERSION" ~/.buildozer/android/platform/python-for-android || true)
          
          if [ -z "$ndk_files" ]; then
            echo "⚠️ WARNING: DEFAULT_NDK_VERSION not found. Trying alternative method..."
            
            # 尝试新的版本定义方式
            ndk_files=$(grep -rl "NDK_VERSION" ~/.buildozer/android/platform/python-for-android || true)
            
            if [ -z "$ndk_files" ]; then
              echo "❌ ERROR: Could not find NDK version definition in any file"
              exit 1
            else
              echo "✅ Found alternative NDK version definition in:"
              echo "$ndk_files"
              
              # 确保文件存在并可写
              echo "Verifying file existence and permissions..."
              for file in $ndk_files; do
                if [ ! -f "$file" ]; then
                  echo "❌ ERROR: File does not exist: $file"
                  exit 1
                fi
                if [ ! -w "$file" ]; then
                  echo "❌ ERROR: File is not writable: $file"
                  exit 1
                fi
                echo "  - File exists and is writable: $file"
              done
              
              # 循环处理每个文件
              echo "Patching NDK version in alternative files..."
              patch_success=false
              for file in $ndk_files; do
                echo "  - Patching $file"
                if sed -i 's/NDK_VERSION = "25b"/NDK_VERSION = "26b"/' "$file"; then
                  patch_success=true
                  echo "    ✅ Successfully patched $file"
                else
                  echo "    ❌ Failed to patch $file"
                fi
              done
              
              # 验证是否有任何文件被成功修补
              if [ "$patch_success" = false ]; then
                echo "❌ ERROR: Failed to patch any files"
                exit 1
              fi
            fi
          else
            echo "✅ Found NDK version definition in:"
            echo "$ndk_files"
            
            # 确保文件存在并可写
            echo "Verifying file existence and permissions..."
            for file in $ndk_files; do
              if [ ! -f "$file" ]; then
                echo "❌ ERROR: File does not exist: $file"
                exit 1
              fi
              if [ ! -w "$file" ]; then
                echo "❌ ERROR: File is not writable: $file"
                exit 1
              fi
              echo "  - File exists and is writable: $file"
            done
            
            # 循环处理每个文件
            echo "Patching toolchain.py..."
            patch_success=false
            for file in $ndk_files; do
              echo "  - Patching $file"
              if sed -i 's/DEFAULT_NDK_VERSION = "25b"/DEFAULT_NDK_VERSION = "26b"/' "$file"; then
                patch_success=true
                echo "    ✅ Successfully patched $file"
              else
                echo "    ❌ Failed to patch $file"
              fi
            done
            
            # 验证是否有任何文件被成功修补
            if [ "$patch_success" = false ]; then
              echo "❌ ERROR: Failed to patch any files"
              exit 1
            fi
          fi
          
          # 验证修改
          echo "Verifying modification..."
          grep_result=$(grep -r "26b" ~/.buildozer/android/platform/python-for-android || true)
          
          if [ -z "$grep_result" ]; then
            echo "❌ ERROR: Failed to verify modification"
            exit 1
          else
            echo "✅ NDK version successfully updated to 26b:"
            echo "$grep_result"
          fi
          
          # 检查目录权限
          echo "Checking directory permissions:"
          ls -la ~/.buildozer/android/platform/python-for-android
          
          # 验证 p4a 可执行文件
          echo "Checking p4a executable:"
          if [ -f ~/.buildozer/android/platform/python-for-android/pythonforandroid/toolchain.py ]; then
            echo "✅ p4a toolchain.py found"
          else
            echo "❌ ERROR: p4a toolchain.py not found"
            exit 1
          fi
          
          echo "✅ Python for Android successfully patched!"
